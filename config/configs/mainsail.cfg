#####################################################################
# Mainsail适配
#####################################################################

## G-CODE文件保存位置
[virtual_sdcard]
path: ~/printer_data/gcodes

## 暂停/恢复功能，支持位置储存和恢复
[pause_resume]

## 取消打印
[gcode_macro CANCEL_PRINT]
description: 取消打印
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set th = printer.toolhead %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    G90                                                                                                    # 切换到相对于原点的坐标系
    M400                                                                                                   # 等待缓存清空
    _RESET_EXTRUDER                                                                                      # 重置挤出机
    G1 E-5.0 F1800                                                                                         # 回抽5mm
    G0 X{th.axis_maximum.x - 20} Y{th.axis_maximum.y - 20} Z{th.position.z + 50 if th.position.z < 100 else z_safe} F3600        # 停到指定位置
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    BED_MESH_CLEAR
    {action_respond_info("取消打印")}

## 暂停打印
[gcode_macro PAUSE]
description: 暂停打印
rename_existing: BASE_PAUSE
variable_extrude: 5.0    # 暂停时耗材回抽量
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}           # 从变量获取回抽量
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}     # 设置停靠的X坐标
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}     # 设置停靠的Y坐标
    {% set max_z = printer.toolhead.axis_maximum.z|float %}            # Z轴最大值
    {% set act_z = printer.toolhead.position.z|float %}                # Z轴当前坐标
    {% if act_z < (max_z - 2.0) %}                                     # 判断并设置Z轴抬升量
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = 10.0 %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PAUSE_state                               # 保存当前位置坐标
    BASE_PAUSE                                                       # 暂停打印
    G91                                                               # 相对当前位置的坐标系
    G1 E-{E} F2100                                                   # 回抽耗材
    G1 Z{z_safe} F900                                                # 抬升Z到安全坐标
    G90                                                              # 相对原点的坐标系
    G1 X{x_park} Y{y_park} F6000                                     # 移动到停靠点
    {action_respond_info("暂停打印")}

## 恢复打印
[gcode_macro RESUME]
description: 恢复打印
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}           # 从变量获取回抽量
    #CLEAN_NOZZLE                                                      # 清理喷嘴
    G91                                                               # 相对当前位置的坐标系
    G1 E{E} F2100                                                    # 挤出耗材
    RESTORE_GCODE_STATE NAME=PAUSE_state                           # 恢复到暂停前位置
    BASE_RESUME                                                     # 恢复打印
    {action_respond_info("恢复打印")}

# 排除打印对象 (aka Marlin/RRF M486 commands)
# 对象预处理下载 https://github.com/kageurufu/cancelobject-preprocessor/releases
[exclude_object]

## 排除打印对象
[gcode_macro M486]
description: 排除打印对象
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("请先添加 [exclude_object] 配置")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
